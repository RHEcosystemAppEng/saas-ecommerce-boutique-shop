name: Frontend & Backend build
on:
  push:
    branches:
      - main
      - rules
env:
  IMAGE_REGISTRY: quay.io
  IMAGE_REPOSITORY: ecosystem-appeng
jobs:
  build-image-and-push-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3.5.1
      with:
        java-version: 17
        java-package: jdk
        distribution: 'corretto'
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.8.6
    - name: Build Quarkus JVM executable
      run: |
        cd tenant-manager-backend
        #mvn package -Pnative
        mvn package
    - name: Build and publish docker image
      env:
        IMAGE_NAME: saas-tenant-manager-backend
      run: |
        cd tenant-manager-backend
        BUILD_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo Build version is: ${BUILD_VERSION}
        IMAGE_FULL=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${BUILD_VERSION}
        IMAGE_LATEST=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
        echo Building image: ${IMAGE_FULL}
        docker login "${{ env.IMAGE_REGISTRY }}" --username="${{ secrets.REGISTRY_USERNAME }}" --password="${{ secrets.REGISTRY_PASSWORD }}"
        
        docker build --build-arg BUILD_VERSION=${BUILD_VERSION} -t ${IMAGE_FULL} -f ./src/main/docker/Dockerfile.jvm .
        docker tag ${IMAGE_FULL} ${IMAGE_LATEST}
        docker push ${IMAGE_FULL}
        #docker push ${IMAGE_LATEST}
  build-image-and-push-rules-engine:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3.5.1
      with:
        java-version: 17
        java-package: jdk
        distribution: 'corretto'
    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.4
      with:
        maven-version: 3.8.6
    - name: Build Quarkus JVM executable
      run: |
        cd tenant-manager-rules-engine
        #mvn package -Pnative
        mvn package
    - name: Build and publish docker image
      env:
        IMAGE_NAME: saas-tenant-manager-rules-engine
      run: |
        cd tenant-manager-rules-engine
        BUILD_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo Build version is: ${BUILD_VERSION}
        IMAGE_FULL=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${BUILD_VERSION}
        IMAGE_LATEST=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
        echo Building image: ${IMAGE_FULL}
        docker login "${{ env.IMAGE_REGISTRY }}" --username="${{ secrets.REGISTRY_USERNAME }}" --password="${{ secrets.REGISTRY_PASSWORD }}"

        docker build --build-arg BUILD_VERSION=${BUILD_VERSION} -t ${IMAGE_FULL} -f ./src/main/docker/Dockerfile.jvm .
        docker tag ${IMAGE_FULL} ${IMAGE_LATEST}
        docker push ${IMAGE_FULL}
        docker push ${IMAGE_LATEST}
  build-image-and-push-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build and publish docker image
      env:
        IMAGE_NAME: saas-tenant-manager-frontend
      run: |
        cd tenant-manager-frontend
        BUILD_VERSION=$(grep '"version"' package.json | cut -d ':' -f2 | tr -d ' ",')
        echo Build version is: ${BUILD_VERSION}
        IMAGE_FULL=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${BUILD_VERSION}
        IMAGE_LATEST=${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest
        echo Building image: ${IMAGE_FULL}
        docker login "${{ env.IMAGE_REGISTRY }}" --username="${{ secrets.REGISTRY_USERNAME }}" --password="${{ secrets.REGISTRY_PASSWORD }}"

        docker build --build-arg BUILD_VERSION=${BUILD_VERSION} -t ${IMAGE_FULL} .
        docker tag ${IMAGE_FULL} ${IMAGE_LATEST}
        docker push ${IMAGE_FULL}
        docker push ${IMAGE_LATEST}
