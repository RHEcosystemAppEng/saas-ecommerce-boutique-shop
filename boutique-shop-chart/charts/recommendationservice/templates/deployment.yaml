{{- $deployment := (lookup "v1" "Deployment" (include "ops.namespace" .) "recommendationservice") }}
{{- if not $deployment }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: recommendationservice
  namespace: {{ include "ops.namespace" . }}
  {{- if include "recommendationservice.keep" . }}
  annotations: 
    helm.sh/resource-policy: keep
  {{- end }}
spec:
  selector:
    matchLabels:
      app: recommendationservice
      function: backends
  template:
    metadata:
      labels:
        app: recommendationservice
        function: backends
    spec:
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
      # securityContext:
      #   fsGroup: 10000
      #   runAsGroup: 10000
      #   runAsNonRoot: true
      #   runAsUser: 10000
      containers:
      - name: server
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - all
          privileged: false
          readOnlyRootFilesystem: true
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 8080
        readinessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice.{{ include "ops.namespace" . }}.svc:3550"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        resources:
          requests:
            cpu: 100m
            memory: 220Mi
          limits:
            cpu: 200m
            memory: 450Mi
{{- end }}